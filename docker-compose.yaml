services:
  # The Python ML API Service
  python-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-api-compose
    ports:
      - "8000:80"

  # A temporary service to run the training script
  python-api-train:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-api-train-compose
    command: python train.py
    volumes:
      - .:/app

  # The C# Backend Service
  csharp-backend:
    build:
      context: ./ChurnPlatform.Backend
      dockerfile: Dockerfile
    container_name: csharp-backend-compose
    ports:
      - "8001:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Database=churn_db;Username=admin;Password=password
    depends_on:
      - python-api
      - db

  # The new React Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-compose
    ports:
      - "3000:80"
    depends_on:
      - csharp-backend

  # The new PostgreSQL Database Service
  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=churn_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

# Top-level volumes declaration
volumes:
  postgres_data: